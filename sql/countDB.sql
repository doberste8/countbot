-- MySQL Script generated by MySQL Workbench
-- 08/17/17 02:13:58
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema countDB
-- -----------------------------------------------------
DROP DATABASE `countDB`;
CREATE SCHEMA IF NOT EXISTS `countDB` DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;
USE `countDB` ;

GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE, CREATE TEMPORARY TABLES, EXECUTE ON `countDB`.* TO 'countDB'@'localhost' IDENTIFIED BY 'countDB';

-- -----------------------------------------------------
-- Table `countDB`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `countDB`.`users` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
  CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `countDB`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `countDB`.`messages` (
  `id` VARCHAR(45) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_id` VARCHAR(45) NOT NULL,
  `text` VARCHAR(5000),
  PRIMARY KEY (`id`),
  INDEX `user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_messages_users_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `countDB`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `countDB`.`likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `countDB`.`likes` (
  `message_id` VARCHAR(45) NOT NULL,
  `user_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`message_id`, `user_id`),
    INDEX `message_id_idx` (`message_id` ASC),
  CONSTRAINT `fk_likes_messages_message_id`
    FOREIGN KEY (`message_id`)
    REFERENCES `countDB`.`messages` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    INDEX `user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_likes_users_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `countDB`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci
ENGINE = InnoDB;

-- -----------------------------------------------------
-- View `countDB`.`likeview`
-- -----------------------------------------------------

DROP VIEW IF EXISTS countDB.likeview;
create view likeview as select m.created_at as date, t.id as target_id, s.id as source_id from likes l join messages m on l.message_id = m.id join users t on t.id = m.user_id join users s on s.id = l.user_id;

-- -----------------------------------------------------
-- Procedure `countDB`.`LikeMatrix`
-- -----------------------------------------------------

DELIMITER //
DROP PROCEDURE IF EXISTS countDB.LikeMatrix //
CREATE DEFINER=countDB@localhost PROCEDURE countDB.LikeMatrix(IN startDate VARCHAR(40), IN endDate VARCHAR(40))
BEGIN

IF(endDate = '%') THEN
        SET endDate = NOW();
    END IF;

IF EXISTS (select u.name from (select distinct target_id as id from likeview where date between startDate and endDate union select distinct source_id from likeview where date between startDate and endDate) tmp join users u on tmp.id = u.id order by tmp.id) THEN
select u.name from (select distinct target_id as id from likeview where date between startDate and endDate union select distinct source_id from likeview where date between startDate and endDate) tmp join users u on tmp.id = u.id order by tmp.id;

SET group_concat_max_len = 10000;    
SET @sql = NULL;
SELECT
  GROUP_CONCAT(
    CONCAT(
      'COALESCE(SUM(l.source_id = ''',
      id,
      '''),0) AS ''',
      id,
      ''''
    )
  order by id)
INTO @sql
FROM
  (select distinct target_id as id from likeview where date between startDate and endDate union select distinct source_id from likeview where date between startDate and endDate order by id) tmp;

SET @sql = CONCAT('select ', @sql, 'from (select distinct target_id as id from likeview where date between ''', startDate, ''' and ''', endDate, ''' union select distinct source_id from likeview where date between ''', startDate, ''' and ''', endDate, ''') tmp left join likeview l on tmp.id = l.target_id and l.date between ''', startDate, ''' and ''', endDate, ''' group by tmp.id order by tmp.id');

PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
END IF;

END //
DELIMITER ;

-- -----------------------------------------------------
-- Procedure `countDB`.`GetCounts`
-- -----------------------------------------------------
DELIMITER //
DROP PROCEDURE IF EXISTS countDB.GetCounts //
CREATE DEFINER=countDB@localhost PROCEDURE countDB.GetCounts(IN userName VARCHAR(45), IN startDate VARCHAR(45), IN endDate VARCHAR(45), IN queryText VARCHAR(255))
BEGIN
SET @g = '';
SET @sql = NULL;
SET @name = 'u.name as name, ';

IF(userName = '%') THEN
  SET @name = '';
END IF;

IF(userName = 'ALL') THEN
        SET @g = 'group by u.id ';
        SET userName = '%';
    END IF;

SELECT name from users where name like userName;

SET @sql = CONCAT('SELECT ', @name, 'COUNT(COALESCE(m.text, '''')) AS count FROM users u JOIN messages m ON u.id = m.user_id AND name like ''', userName, ''' AND m.created_at BETWEEN ''', startDate, ''' AND ''', endDate, ''' AND COALESCE(m.text, '''') like ''%', queryText, '%''', @g, 'order by count desc');

PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

END //
DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;